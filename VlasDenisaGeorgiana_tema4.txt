--Tema 4 Vlas Denisa Georgiana, grupa 2232

CREATE DATABASE FirmaL6
GO


USE FIRMAL6
GO

--Tabela Departamente
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[DEPARTAMENTE]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[DEPARTAMENTE]
GO

CREATE TABLE DEPARTAMENTE (
 IdDept int PRIMARY KEY IDENTITY,
 Denumire varchar(30) NOT NULL
)
GO


-- Tabela Functii
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FUNCTII]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[FUNCTII]
GO

CREATE TABLE FUNCTII (
 IdFunctie int PRIMARY KEY IDENTITY,
 Denumire varchar(30) NOT NULL,
 Salariu int CHECK (Salariu > 0)
)
GO


-- Tabela Angajati
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ANGAJATI]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[ANGAJATI]
GO

CREATE TABLE ANGAJATI (
 IdAngajat int PRIMARY KEY IDENTITY,
 Nume varchar(20) NOT NULL,
 Prenume varchar(20) NOT NULL,
 Marca int NOT NULL UNIQUE,
 DataNasterii date,
 DataAngajarii date,
 Adresa_jud varchar(20) NOT NULL,
 IdFunctie int NOT NULL,
 IdDept int NOT NULL
)
GO


-- Tabela Clienti
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CLIENTI]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[CLIENTI]
GO

CREATE TABLE CLIENTI (
 IdClient int PRIMARY KEY IDENTITY,
 Denumire varchar(20) NOT NULL,
 Tip_cl varchar(10) NOT NULL, -- PF, PFA, SRL, SA, RA
 Adresa_jud varchar(20) NOT NULL
)
GO


-- Tabela Categorii_prod
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CATEGORII_PROD]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[CATEGORII_PROD]
GO

CREATE TABLE CATEGORII_PROD (
 IdCateg int PRIMARY KEY IDENTITY,
 Denumire varchar(20) NOT NULL
)
GO


-- Tabela Produse
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PRODUSE]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[PRODUSE]
GO

CREATE TABLE PRODUSE (
 IdProdus int PRIMARY KEY IDENTITY,
 Denumire varchar(36) NOT NULL,
 IdCateg int NOT NULL
)
GO


-- Tabela Vanzari
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[VANZARI]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[VANZARI]
GO

CREATE TABLE VANZARI (
 IdVanzare int PRIMARY KEY IDENTITY,
 IDProdus int NOT NULL,
 IDClient int NOT NULL,
 IDVanzator int NOT NULL,
 DataVanz date DEFAULT GetDate(),
 NrProduse int DEFAULT 1 CHECK (NrProduse > 0),
 PretVanz int CHECK (PretVanz > 0)
)
GO


USE FIRMAL6
GO

-- Chei straine in tabela Angajati
ALTER TABLE ANGAJATI 
 ADD CONSTRAINT FK_ANGAJATI_DEPARTAMENTE FOREIGN KEY (IdDept) 
REFERENCES DEPARTAMENTE(IdDept);
GO

ALTER TABLE ANGAJATI 
 ADD CONSTRAINT FK_ANGAJATI_FUNCTII FOREIGN KEY (IdFunctie) 
REFERENCES FUNCTII(IdFunctie);
GO


-- Chei straine in tabela Vanzari
ALTER TABLE VANZARI 
 ADD CONSTRAINT FK_VANZARI_ANGAJATI FOREIGN KEY (IdVanzator) 
REFERENCES ANGAJATI(IdAngajat);
GO

ALTER TABLE VANZARI 
 ADD CONSTRAINT FK_VANZARI_CLIENTI FOREIGN KEY (IdClient) 
REFERENCES CLIENTI(IdClient);
GO

ALTER TABLE VANZARI 
 ADD CONSTRAINT FK_VANZARI_PRODUSE FOREIGN KEY (IdProdus) 
REFERENCES PRODUSE(IdProdus);
GO


ALTER TABLE PRODUSE 
 ADD CONSTRAINT FK_PRODUSE_CATEGORII_PROD FOREIGN KEY(IdCateg)
REFERENCES CATEGORII_PROD(IdCateg)
GO



Use FirmaL6
GO

-- Populare tabela Departamente
INSERT INTO Departamente (Denumire) VALUES ('MANAGEMENT');
INSERT INTO Departamente (Denumire) VALUES ('PRODUCTIE');
INSERT INTO Departamente (Denumire) VALUES ('PROIECTARE');
INSERT INTO Departamente (Denumire) VALUES ('VANZARI');
INSERT INTO Departamente (Denumire) VALUES ('FINANCIAR-CONTAB');
INSERT INTO Departamente (Denumire) VALUES ('PERSONAL-SALARIZARE');
GO

-- Populare tabela Functii
INSERT INTO Functii (Denumire, Salariu) VALUES ('MANAGER', 10000)
INSERT INTO Functii (Denumire, Salariu) VALUES ('DIRECTOR', 8000)
INSERT INTO Functii (Denumire, Salariu) VALUES ('INGINER', 5000)
INSERT INTO Functii (Denumire, Salariu) VALUES ('ANALIST FINANCIAR', 4000)
INSERT INTO Functii (Denumire, Salariu) VALUES ('ECONOMIST', 3500)
INSERT INTO Functii (Denumire, Salariu) VALUES ('TEHNICIAN', 3500)
INSERT INTO Functii (Denumire, Salariu) VALUES ('ASISTENT MANAGER', 3500)
INSERT INTO Functii (Denumire, Salariu) VALUES ('ASISTENT DIRECTOR', 3000)
INSERT INTO Functii (Denumire, Salariu) VALUES ('MUNCITOR CALIFICAT', 2000)
INSERT INTO Functii (Denumire, Salariu) VALUES ('MUNCITOR NECALIFICAT', 1500)
INSERT INTO Functii (Denumire, Salariu) VALUES ('JURIST', 3500)
GO


--INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
-- VALUES ('N8', 'P1', 24, '10/15/1955', '10/15/2005', 'Bucuresti', 
-- (SELECT IdFunctie FROM Functii WHERE Denumire = 'Inginer'), 
-- (SELECT IdDept FROM DEpartamente WHERE Denumire = 'Productie'));

-- Populare tabela Angajati
-- Manager
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N1', 'P1', 1, '10/15/1955', '10/15/2005', 'Bucuresti', 1, 1);

-- Director Productie
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N2', 'P2', 2, '10/20/1981', '10/15/2006', 'Bihor', 2, 2);
-- Director Proiectare
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N3', 'P3', 3, '7/25/1980', '7/17/2009', 'Ilfov', 2, 3);
-- Director Vanzari
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N4', 'P4', 4, '01/01/1998', '12/31/2020', 'Cluj', 2, 4);
-- Director Financiar-Contab
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N5', 'P5', 5, '02/15/1962', '12/12/2019', 'Cluj', 2, 5);
-- Director Personal-Salarizare
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N6', 'P6', 6, '05/05/1964', '05/06/2018', 'Arad', 2, 6);
GO

-- Personal Management
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept)
 VALUES ('N7', 'P7', 7, '08/12/1975', '09/16/2010', 'Cluj', 3, 2);
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N8', 'P8', 8, '05/10/1977', '08/26/2011', 'Galati', 6, 2);
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N9', 'P9', 9, '07/17/1975', '12/12/2010', 'Vaslui', 9, 2)
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N10', 'P10', 10, '09/09/1985', '05/30/2012', 'Bucuresti', 9, 2);
GO

-- Personal Proiectare
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N11', 'P9', 11, '07/17/1976', '12/12/2014', 'Cluj', 3, 3)
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N12', 'P2', 12, '09/09/1981', '05/30/2015', 'Cluj', 3, 3);
GO

-- Personal vanzari
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N13', 'P9', 13, '07/17/1979', '12/12/2014', 'Cluj', 5, 4)
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N12', 'P13', 14, '09/09/1980', '05/30/2015', 'Cluj', 5, 4);
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N8', 'P5', 15, '07/17/1983', '12/12/2016', 'Bihor', 5, 4)
GO

-- Personal Financiar-Contab
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N16', 'P1', 16, '03/17/1980', '01/12/2013', 'Cluj', 4, 5)

-- Personal Personal-Salariz
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N12', 'P15', 17, '03/17/1981', '01/12/2014', 'Cluj', 4, 6)

-- Asistent manager
INSERT INTO ANGAJATI(Nume, Prenume, Marca, DataNasterii, DataAngajarii, Adresa_jud, IdFunctie, IdDept) 
 VALUES ('N22', 'P38', 18, '10/15/1995', '10/15/2016', 'Bucuresti', 7, 1);
GO

-- Populare tabela Clienti
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Vitacon', 'Cluj', 'SA');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Mediagalacsy', 'Cluj', 'SA');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Franco', 'Bucuresti', 'SA');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Artex', 'Sibiu', 'SA');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Liodl', 'Cluj', 'SA');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Dedemun', 'Bacau', 'SA');
GO

INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Ion', 'Cluj', 'SRL');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Maria', 'Salaj', 'SRL');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Ana', 'Maramures', 'SRL');
INSERT INTO CLIENTI(Denumire, Adresa_jud, Tip_cl) VALUES ('Brusli', 'Bihor', 'SRL');
GO


-- Populare tabela Categorii_Prod
INSERT INTO CATEGORII_PROD(Denumire) VALUES ('Cable');
INSERT INTO CATEGORII_PROD(Denumire) VALUES ('Adaptoare');
INSERT INTO CATEGORII_PROD(Denumire) VALUES ('Alimentatoare');
INSERT INTO CATEGORII_PROD(Denumire) VALUES ('Modulatoare FM');
GO


-- Populare tabela Produse
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Cablu USB-USB, 0.5m', 1);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Cablu USB-USB, 1m', 1);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Cablu USB-USB, 2m', 1);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Cablu USB-mini USB, 0.5m', 1);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Cablu USB-micro USB, 0.5m', 1);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Cablu USB-micro USB-C, 0.5m', 1);
GO
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Adaptor USB-mini USB', 2);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Adaptor USB-micro USB', 2);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Adaptor USB-micro USB-C', 2);
GO
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Alimentator 220V-5V USB 1o', 3);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Alimentator 220V-5V USB 2o', 3);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Alimentator 220V-5V USB 3o', 3);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Alimentator 12V-5V USB 1o', 3);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Alimentator 12V-5V USB 2o', 3);
GO
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Modulator FM, USB', 4);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Modulator FM, Bluetooth', 4);
INSERT INTO PRODUSE(Denumire, IDCateg) VALUES ('Modulator FM, USB, Bluetooth', 4);
GO


-- Populare tabela Vanzari
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (1, 1, 13, '05/01/2016', 5, 6);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (2, 2, 14, '05/01/2016', 3, 9);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (4, 3, 14, '06/02/2016', 10, 8);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (5, 5, 15, '06/02/2016', 1, 9);
GO

INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (7, 7, 13, '06/02/2016', 5, 16);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (8, 2, 14, '06/02/2018', 2, 19);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (8, 8, 14, '07/03/2018', 5, 18);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (9, 9, 15, '07/03/2019', 11, 19);
GO

INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (10, 1, 13, '07/04/2019', 5, 26);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (11, 3, 14, '07/04/2016', 2, 29);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (13, 10, 14, '08/05/2020', 5, 28);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (15, 10, 13, '08/05/2019', 11, 39);
GO

INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (16, 1, 14, '08/06/2021', 3, 26);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (17, 8, 13, '08/06/2021', 2, 29);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (16, 8, 13, '09/07/2019', 1, 38);
INSERT INTO VANZARI(IDProdus, IDClient, IDVanzator, DataVanz, NrProduse, PretVanz)
 VALUES (17, 7, 15, '09/07/2020', 1, 39);
GO


--exemple lab 6

USE Firma
GO
--Care sunt salariile din departamentul ‘PRODUCTIE’ ?
SELECT A.Nume, A.Prenume, F.Salariu
FROM Angajati A, Departamente D, Functii F
WHERE (A.IdDept = D.IdDept AND A.IdFunctie = F.IdFunctie)
AND D.Denumire = 'PRODUCTIE'
ORDER BY F.salariu DESC, A.nume, A.prenume

SELECT A.Nume, A.Prenume, F.Salariu
FROM Angajati A
JOIN Departamente D ON A.IdDept = D.IdDept
JOIN Functii F ON A.IdFunctie = F.IdFunctie
WHERE D.Denumire = 'PRODUCTIE'
ORDER BY F.salariu DESC, A.nume, A.prenume

--Care sunt angajații din departamentul PROIECTARE, ordonați alfabetic (nume, prenume) ?

SELECT A.Nume, A.Prenume, D.Denumire Departament
FROM Angajati A JOIN Departamente D
ON (A.IdDept = D.IdDept)
WHERE (D.Denumire = 'PROIECTARE')
ORDER BY Nume, Prenume

--Care sunt mediile salariilor grupate pe funcții ?

SELECT F.Denumire, AVG(F.Salariu) Sal_med
	FROM Angajati A JOIN Functii F
	ON (A.IdFunctie = F.IdFunctie)
GROUP BY F.Denumire

--Care este totalul salariilor grupate pe funcții ordonate descendent ?

SELECT F.Denumire AS Functia, Sum(F.Salariu) Total_sal
FROM Angajati A JOIN Functii F
ON (A.IdFunctie = F.IdFunctie)
GROUP BY F.Denumire
ORDER BY Sum(F.Salariu) DESC

--exercitii lab 6

--1. Care sunt angajații dintr-un anumit departament (dat prin denumire) a căror nume începe cu caracterele ‘N1’ ?

SELECT A.Nume
FROM Angajati A, Departamente D, Functii F
WHERE (A.IdDept = D.IdDept AND A.IdFunctie = F.IdFunctie)
AND D.Denumire = 'VANZARI' AND Nume LIKE 'N1%' 
ORDER BY A.nume DESC

--2. Care sunt angajații dintr-un anumit departament (dat prin denumire) ordonați după salariu crescător/descrescător ?


SELECT A.Nume, A.Prenume, D.Denumire Departament, F.Salariu
FROM Angajati A JOIN  Departamente D 
ON (A.IdDept = D.IdDept AND D.Denumire= 'PROIECTARE')
join FUNCTII F on a.IdFunctie=F.IdFunctie
ORDER BY F.Salariu

--3. Câți angajați sunt într-un anumit departament dat prin denumire ?

SELECT COUNT(*) as NrAng from ANGAJATI A
JOIN  Departamente D ON (A.IdDept = D.IdDept AND D.Denumire= 'VANZARI')

--4. Care este suma salariilor angajaților din companie ?

SELECT SUM(F.Salariu) as SumaSalarii from Angajati A
JOIN Functii F ON A.IdFunctie = F.IdFunctie;

--tema 6

--1. Care sunt angajații a căror funcții conține secvența de caractere ‘ngi’ ?

SELECT A.Nume, A.Prenume, F.Denumire as Functie from Angajati A
JOIN Functii F ON A.IdFunctie = F.IdFunctie
WHERE F.Denumire LIKE '%ngi%';

--2. Care sunt salariile din departamentul ‘PRODUCTIE’ și câți angajați au aceste salarii ?

SELECT F.Salariu, COUNT(*) AS NumarAngajati
FROM Angajati A
JOIN Functii F ON A.IdFunctie = F.IdFunctie
JOIN Departamente D ON A.IdDept = D.IdDept
WHERE D.Denumire = 'PRODUCTIE'
GROUP BY F.Salariu
ORDER BY F.Salariu;

--3. Care sunt cele mai mici/mari salarii din departamente ?
--min
SELECT D.Denumire, MIN(F.Salariu) as SalariuMin
FROM Angajati A
JOIN Departamente D ON A.IdDept = D.IdDept
JOIN Functii F ON A.IdFunctie = F.IdFunctie
GROUP BY D.Denumire
ORDER BY D.Denumire; 

--max
SELECT D.Denumire, MAX(F.Salariu) as SalariuMax
FROM Angajati A
JOIN Departamente D ON A.IdDept = D.IdDept
JOIN Functii F ON A.IdFunctie = F.IdFunctie
GROUP BY D.Denumire
ORDER BY D.Denumire; 

--4. Care sunt produsele vândute într-o anumită perioadă de timp ?

SELECT DISTINCT P.Denumire AS PRODUSE
FROM Vanzari V
JOIN PRODUSE P ON P.IdProdus = V.IDProdus
WHERE DATEDIFF(DAY, V.DataVanz, '2019/01/01') > 0 AND DATEDIFF(DAY, '2018/01/01', V.DataVanz) > 0;

--5. Care sunt clienții ce au cumpărat produse prin intermediul unui vânzător anume ?

SELECT C.Denumire AS Client
FROM CLIENTI C
JOIN VANZARI V ON C.IdClient = V.IDClient
WHERE V.IDVanzator = '14';

--6. Care sunt clienții ce au cumpărat două produse ?

SELECT C.Denumire AS Client
FROM CLIENTI C
JOIN VANZARI V ON C.IdClient = V.IDClient
GROUP BY C.Denumire
HAVING COUNT(V.IDProdus) = 2;

--7. Care sunt clienții ce au cumpărat cel puțin două produse ?

SELECT C.Denumire AS Client
FROM CLIENTI C
JOIN VANZARI V ON C.IdClient = V.IDClient
GROUP BY C.Denumire
HAVING COUNT(V.IDProdus) >= 2;

--8. Câți clienți au cumpărat (la o singură cumpărare) produse în valoare mai mare decât o sumă dată (de ex. 200) ?

/*
SELECT COUNT(C.IdClient) AS NumarClienti
FROM CLIENTI C
JOIN VANZARI V ON C.IdClient = V.IDClient
WHERE V.PretVanz > 30;
*/

SELECT COUNT(*) AS NumarClienti
FROM VANZARI V
JOIN CLIENTI C ON (C.IdClient = V.IDClient AND V.NrProduse* V.PretVanz>100)

--9. Care sunt clienții din CLUJ care au cumpărat produse în valoare mai mare de 200 ?

SELECT C.Denumire AS Client, SUM(V.PretVanz * V.NrProduse) AS TotalPlata
FROM CLIENTI C
JOIN VANZARI V ON C.IdClient = V.IDClient
JOIN PRODUSE P ON V.IDProdus = P.IdProdus
WHERE C.Adresa_jud = 'CLUJ'
GROUP BY C.Denumire
HAVING SUM(V.PretVanz * V.NrProduse) > 200;

--10. Care sunt mediile vânzărilor pe o anumită perioadă de timp, grupate pe produse ?

SELECT P.Denumire AS Produs, AVG(V.PretVanz) AS MedieVanzari
FROM PRODUSE P
JOIN VANZARI V ON P.IdProdus = V.IDProdus
WHERE V.DataVanz BETWEEN '2019-01-01' AND '2019-12-31'
GROUP BY P.Denumire;

/*
SELECT P.Denumire AS PRODUSE, SUM(V.NRPRODUSE)/DATEDIFF(DAY,'2016/01/01','2019/01/01') AS MEDIA_PER_ZI
FROM VANZARI V 
JOIN PRODUSE P ON (P.IdProdus = V.IDProdus AND DATEDIFF(DAY,V.DataVanz,'2019/01/01')>0 AND DATEDIFF(DAY,'2016/01/01',V.DataVanz)>0)
GROUP BY P.Denumire
*/

--11. Care este numărul total de produse vândute pe o anumită perioadă de timp ?

SELECT COUNT(V.NRPRODUSE) AS NUMAR_TOTAL_PRODUSE
FROM VANZARI V 
JOIN PRODUSE P ON (P.IdProdus = V.IDProdus AND DATEDIFF(DAY,V.DataVanz,'2019/01/01')>0 AND DATEDIFF(DAY,'2016/01/01',V.DataVanz)>0)

--12. Care este numărul de total de produse vândute de un vânzător precizat prin nume ?

SELECT SUM(V.NrProduse) AS NumarTotalProduseVandute
FROM VANZARI V
JOIN ANGAJATI A ON (A.IdAngajat = V.IDVanzator AND A.Nume = 'N13')

--13. Care sunt clienții ce au cumpărat produse în valoare mai mare decât media vânzărilor din luna august 2016 ?

SELECT DISTINCT C.Denumire AS CLIENT
FROM VANZARI V
JOIN CLIENTI C ON (C.IdClient = V.IDClient)
GROUP BY C.Denumire 
HAVING SUM(V.NrProduse* V.PretVanz)>SUM(V.NRPRODUSE)/DATEDIFF(DAY,'2016/08/01','2016/09/01')

--14. Care sunt produsele care s-au vândut la mai mult de un client ?

SELECT *FROM VANZARI

SELECT DISTINCT P.DENUMIRE
FROM VANZARI V
JOIN CLIENTI C ON (C.IdClient = V.IDClient)
JOIN PRODUSE P ON(P.IdProdus = V.IDProdus) 
GROUP BY P.Denumire
HAVING COUNT(P.IdProdus)>1

--15. Care sunt vânzările valorice realizate de fiecare vânzător, grupate pe produse și clienți, cu
--subtotaluri ?

SELECT P.Denumire,A.Nume, A.Prenume, SUM(V.NrProduse*V.PretVanz) AS VALOAREA_TOTALA_VANDUTA, C.Denumire
FROM VANZARI V
JOIN ANGAJATI A ON (A.IdAngajat = V.IDVanzator)
JOIN CLIENTI C ON (C.IdClient = V.IDClient)
JOIN PRODUSE P ON(P.IdProdus = V.IDProdus) 
GROUP BY P.Denumire, A.Nume, A.Prenume, C.Denumire







